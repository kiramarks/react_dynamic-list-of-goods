{"version":3,"sources":["components/GoodsList.tsx","App.tsx","api/api.js","index.tsx"],"names":["GoodsList","goods","map","item","key","name","style","color","App","useState","setGoods","isLoading","setLoading","loadGoods","filter","setTimeout","fetch","then","response","json","items","sort","a","b","localeCompare","slice","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"mMAYaA,G,KAAsC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpD,OACE,4BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EAAKE,KACVC,MAAO,CAAEC,MAAM,GAAD,OAAKJ,EAAKI,SAEvBJ,EAAKE,YCgDDG,EA9DO,WAAO,IAAD,EACAC,mBAAS,IADT,mBACnBR,EADmB,KACZS,EADY,OAEMD,oBAAS,GAFf,mBAEnBE,EAFmB,KAERC,EAFQ,KAIpBC,EAAY,SAACC,GACjBF,GAAW,GAEXG,YAAW,WCVNC,MAHO,yEAIXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDWtBF,MAAK,SAAAG,GACJ,OAAQN,GACN,IAAK,UACHJ,EAASU,EACNC,MAAK,SAACC,EAAUC,GAAX,OAAwBD,EAAEjB,KAAKmB,cAAcD,EAAElB,SACpDoB,MAAM,EAAG,IACZ,MACF,IAAK,WACHf,EAASU,EAAMN,QAAO,SAACX,GAAD,MAAgC,QAAfA,EAAKI,UAC5C,MACF,QACEG,EAASU,GAGbR,GAAW,QAEd,MAGL,OACE,yBAAKc,UAAU,aACb,qDACA,4BACEC,KAAK,SACLD,UAAU,+CACVE,QAAS,kBAAMf,EAAU,SAH3B,kBAOA,4BACEc,KAAK,SACLD,UAAU,+CACVE,QAAS,kBAAMf,EAAU,aAH3B,sBAOA,4BACEc,KAAK,SACLD,UAAU,+CACVE,QAAS,kBAAMf,EAAU,cAH3B,kBAOCF,GACC,yBAAKe,UAAU,mDACb,yBAAKA,UAAU,yCAGnB,kBAAC,EAAD,CAAWzB,MAAOA,ME3DxB4B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8532e51a.chunk.js","sourcesContent":["import React from 'react';\n\ninterface GoodsListProps {\n  goods: Goods[];\n}\n\nexport interface Goods {\n  id: number;\n  name: string;\n  color: string;\n}\n\nexport const GoodsList: React.FC<GoodsListProps> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(item => (\n        <li\n          key={item.name}\n          style={{ color: `${item.color}` }}\n        >\n          {item.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { getGoods } from './api/api';\nimport './App.css';\nimport { GoodsList, Goods } from './components/GoodsList';\n\n\nconst App: React.FC = () => {\n  const [goods, setGoods] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n\n  const loadGoods = (filter: string) => {\n    setLoading(true);\n\n    setTimeout(() => {\n      getGoods()\n        .then(items => {\n          switch (filter) {\n            case 'first-5':\n              setGoods(items\n                .sort((a: Goods, b: Goods) => a.name.localeCompare(b.name))\n                .slice(0, 5));\n              break;\n            case 'only-red':\n              setGoods(items.filter((item: Goods) => item.color === 'red'));\n              break;\n            default:\n              setGoods(items);\n          }\n\n          setLoading(false);\n        });\n    }, 1000);\n  };\n\n  return (\n    <div className=\"good-list\">\n      <h1>Dynamic list of Goods</h1>\n      <button\n        type=\"button\"\n        className=\"waves-effect waves-light indigo accent-1 btn\"\n        onClick={() => loadGoods('all')}\n      >\n        Load All goods\n      </button>\n      <button\n        type=\"button\"\n        className=\"waves-effect waves-light indigo accent-1 btn\"\n        onClick={() => loadGoods('first-5')}\n      >\n        Load 5 first goods\n      </button>\n      <button\n        type=\"button\"\n        className=\"waves-effect waves-light indigo accent-1 btn\"\n        onClick={() => loadGoods('only-red')}\n      >\n        Load red goods\n      </button>\n      {isLoading && (\n        <div className=\"progress centered #ede7f6 deep-purple lighten-5\">\n          <div className=\"indeterminate deep-purple lighten-2\" />\n        </div>\n      )}\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n\nexport default App;\n","const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport const getGoods = () => {\n  return fetch(API_URL)\n    .then(response => response.json());\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}